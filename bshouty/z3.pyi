
from collections.abc import *
from typing import *

class BoolRef: ...
z3Formula = BoolRef

# TODO: replace with z3AbstractModel with typing.Protocol after upgrading to python3.8
class ModelRef:
    def __getitem__(self, b : z3Formula): ...
z3Model = ModelRef

class CheckSatResult: ...
z3Sat = CheckSatResult
sat : z3Sat
unsat : z3Sat

class Solver:
    def reset(self) -> None: ...
    def add(self, form : z3Formula) -> None: ...
    def check(self) -> z3Sat: ...
    def model(self) -> z3Model: ...

def Bool(ind : int) -> z3Formula: ...

def Not(form : z3Formula) -> z3Formula: ...
@overload
def And(*forms : z3Formula) -> z3Formula: ...
@overload

def And(forms : List[z3Formula]) -> z3Formula: ...
@overload
def Or(*forms : z3Formula) -> z3Formula: ...
@overload
def Or(forms : List[z3Formula]) -> z3Formula: ...

def Implies(antecedence : z3Formula, consequence : z3Formula) -> z3Formula: ...

def substitute(form : z3Formula, *formps : Tuple[z3Formula, z3Formula]): ...